{"version":3,"sources":["components/appBar.js","components/todoList.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","DenseAppBar","classes","className","AppBar","position","color","Toolbar","variant","Typography","Main","useState","item","setItem","newItem","setNewItem","type","value","placeholder","onChange","event","target","Button","onClick","prev","map","val","App","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAMMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,OAIC,SAASC,IACtB,IAAMC,EAAUN,IAEhB,OACE,qBAAKO,UAAWD,EAAQH,KAAxB,SACE,cAACK,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,UAAhC,SACE,cAACC,EAAA,EAAD,CAASC,QAAQ,QAAjB,SACE,cAACC,EAAA,EAAD,CAAYD,QAAQ,KAAKF,MAAM,UAA/B,4B,8DC2CKI,G,MAxDF,WAAO,IAAD,EAGMC,mBAAS,IAHf,mBAGXC,EAHW,KAGLC,EAHK,OAIYF,mBAAS,IAJrB,mBAIXG,EAJW,KAIFC,EAJE,KAyBlB,OACC,gCACC,uBACA,uBACA,sBAAKZ,UAAU,WAAf,UACC,uBAAOa,KAAK,OAAOC,MAAOL,EAAMM,YAAY,aAAaC,SAxBzC,SAACC,GACnBP,EAAQO,EAAMC,OAAOJ,UAwBnB,cAACK,EAAA,EAAD,CAAQnB,UAAU,SAASoB,QArBV,WAGnBR,GAAW,SAACS,GACX,MAAM,GAAN,mBAAWA,GAAX,CAAiBZ,OAGlBC,EAAQ,KAcN,SACC,cAAC,IAAD,MAED,uBACA,uBACA,oBAAIV,UAAU,WAAd,SAEEW,EAAQW,KAAI,SAACC,GACZ,OAAO,mCAAMA,EAAN,eAKX,uBACA,uBACA,qBAAKvB,UAAU,WAAf,SACC,eAACmB,EAAA,EAAD,CAAQnB,UAAU,SAASoB,QA1BX,WAClBR,EAAW,KAyBT,UACC,cAAC,IAAD,IADD,uBCnCWY,E,uKAXb,OACC,gCACC,cAAC1B,EAAD,IACA,uBACA,cAAC,EAAD,W,GAPc2B,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.496de2cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function DenseAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"inherit\">\r\n        <Toolbar variant=\"dense\">\r\n          <Typography variant=\"h5\" color=\"primary\">\r\n            My Tasks\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport './todoList.css';\r\n\r\nconst Main = () => {\r\n\t\r\n\t\r\n\tconst [item, setItem] = useState(\"\");\r\n\tconst [newItem, setNewItem] = useState([]);\r\n\t\r\n\tconst firstEvent = (event) => {\r\n\t\tsetItem(event.target.value);\r\n\t}\r\n\t\r\n\tconst secondEvent = () => {\r\n\t\t\r\n\r\n\t\tsetNewItem((prev)=>{\r\n\t\t\treturn [...prev, item]\r\n\t\t});\r\n\t\t\r\n\t\tsetItem(\"\");\r\n\t\t\r\n\t}\r\n\t\r\n\tconst thirdEvent = () => {\r\n\t\tsetNewItem([]);\r\n\t}\r\n\t\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\t<div className=\"childOne\">\r\n\t\t\t\t<input type=\"text\" value={item} placeholder=\"Add a task\" onChange={firstEvent} />\r\n\t\t\t\t<Button className=\"AddBtn\" onClick={secondEvent}>\r\n\t\t\t\t\t<AddIcon />\r\n\t\t\t\t</Button>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<ul className=\"textFont\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnewItem.map((val) => {\r\n\t\t\t\t\t\t\treturn <li> {val} </li>;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\t<div className=\"childTwo\">\r\n\t\t\t\t<Button className=\"delBtn\" onClick={thirdEvent}>\r\n\t\t\t\t\t<DeleteIcon />Delete All\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Main;","import React from 'react';\nimport DenseAppBar from './components/appBar';\nimport Main from './components/todoList';\n\nclass App extends React.Component {\t\t\t\t\t\n\t\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<DenseAppBar />\n\t\t\t\t<br />\n\t\t\t\t<Main />\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}